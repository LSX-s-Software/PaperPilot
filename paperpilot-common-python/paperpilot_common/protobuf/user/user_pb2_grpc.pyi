"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import paperpilot_common.protobuf.user.user_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class UserStub:
    """用户服务接口"""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetUserShortInfo: grpc.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UserId,
        paperpilot_common.protobuf.user.user_pb2.UserShortInfo,
    ]
    """获取指定ID用户简要信息"""
    GetUserInfo: grpc.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UserId,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """获取指定ID用户详细信息"""
    UpdateUserAvatar: grpc.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UpdateUserAvatarRequest,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """更新用户头像"""

class UserAsyncStub:
    """用户服务接口"""

    GetUserShortInfo: grpc.aio.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UserId,
        paperpilot_common.protobuf.user.user_pb2.UserShortInfo,
    ]
    """获取指定ID用户简要信息"""
    GetUserInfo: grpc.aio.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UserId,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """获取指定ID用户详细信息"""
    UpdateUserAvatar: grpc.aio.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UpdateUserAvatarRequest,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """更新用户头像"""

class UserServicer(metaclass=abc.ABCMeta):
    """用户服务接口"""

    @abc.abstractmethod
    def GetUserShortInfo(
        self,
        request: paperpilot_common.protobuf.user.user_pb2.UserId,
        context: _ServicerContext,
    ) -> typing.Union[
        paperpilot_common.protobuf.user.user_pb2.UserShortInfo,
        collections.abc.Awaitable[paperpilot_common.protobuf.user.user_pb2.UserShortInfo],
    ]:
        """获取指定ID用户简要信息"""
    @abc.abstractmethod
    def GetUserInfo(
        self,
        request: paperpilot_common.protobuf.user.user_pb2.UserId,
        context: _ServicerContext,
    ) -> typing.Union[
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
        collections.abc.Awaitable[paperpilot_common.protobuf.user.user_pb2.UserInfo],
    ]:
        """获取指定ID用户详细信息"""
    @abc.abstractmethod
    def UpdateUserAvatar(
        self,
        request: paperpilot_common.protobuf.user.user_pb2.UpdateUserAvatarRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
        collections.abc.Awaitable[paperpilot_common.protobuf.user.user_pb2.UserInfo],
    ]:
        """更新用户头像"""

def add_UserServicer_to_server(servicer: UserServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

class UserPublicStub:
    """用户公开接口"""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetUserShortInfo: grpc.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UserId,
        paperpilot_common.protobuf.user.user_pb2.UserShortInfo,
    ]
    """获取指定ID用户简要信息"""
    GetCurrentUserInfo: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """获取当前用户信息"""
    UpdateUserInfo: grpc.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UpdateUserInfoRequest,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """更新用户信息"""

class UserPublicAsyncStub:
    """用户公开接口"""

    GetUserShortInfo: grpc.aio.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UserId,
        paperpilot_common.protobuf.user.user_pb2.UserShortInfo,
    ]
    """获取指定ID用户简要信息"""
    GetCurrentUserInfo: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """获取当前用户信息"""
    UpdateUserInfo: grpc.aio.UnaryUnaryMultiCallable[
        paperpilot_common.protobuf.user.user_pb2.UpdateUserInfoRequest,
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
    ]
    """更新用户信息"""

class UserPublicServicer(metaclass=abc.ABCMeta):
    """用户公开接口"""

    @abc.abstractmethod
    def GetUserShortInfo(
        self,
        request: paperpilot_common.protobuf.user.user_pb2.UserId,
        context: _ServicerContext,
    ) -> typing.Union[
        paperpilot_common.protobuf.user.user_pb2.UserShortInfo,
        collections.abc.Awaitable[paperpilot_common.protobuf.user.user_pb2.UserShortInfo],
    ]:
        """获取指定ID用户简要信息"""
    @abc.abstractmethod
    def GetCurrentUserInfo(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
        collections.abc.Awaitable[paperpilot_common.protobuf.user.user_pb2.UserInfo],
    ]:
        """获取当前用户信息"""
    @abc.abstractmethod
    def UpdateUserInfo(
        self,
        request: paperpilot_common.protobuf.user.user_pb2.UpdateUserInfoRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        paperpilot_common.protobuf.user.user_pb2.UserInfo,
        collections.abc.Awaitable[paperpilot_common.protobuf.user.user_pb2.UserInfo],
    ]:
        """更新用户信息"""

def add_UserPublicServicer_to_server(
    servicer: UserPublicServicer, server: typing.Union[grpc.Server, grpc.aio.Server]
) -> None: ...
