# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

from paperpilot_common.protobuf.user import user_pb2 as paperpilot__common_dot_protobuf_dot_user_dot_user__pb2


class UserStub(object):
    """用户服务接口"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserShortInfo = channel.unary_unary(
            "/user.User/GetUserShortInfo",
            request_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.SerializeToString,
            response_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserShortInfo.FromString,
        )
        self.GetUserInfo = channel.unary_unary(
            "/user.User/GetUserInfo",
            request_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.SerializeToString,
            response_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
        )
        self.UpdateUserAvatar = channel.unary_unary(
            "/user.User/UpdateUserAvatar",
            request_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UpdateUserAvatarRequest.SerializeToString,
            response_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
        )


class UserServicer(object):
    """用户服务接口"""

    def GetUserShortInfo(self, request, context):
        """获取指定ID用户简要信息"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserInfo(self, request, context):
        """获取指定ID用户详细信息"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateUserAvatar(self, request, context):
        """更新用户头像"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetUserShortInfo": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserShortInfo,
            request_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.FromString,
            response_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserShortInfo.SerializeToString,
        ),
        "GetUserInfo": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserInfo,
            request_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.FromString,
            response_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.SerializeToString,
        ),
        "UpdateUserAvatar": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUserAvatar,
            request_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UpdateUserAvatarRequest.FromString,
            response_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("user.User", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class User(object):
    """用户服务接口"""

    @staticmethod
    def GetUserShortInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user.User/GetUserShortInfo",
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.SerializeToString,
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserShortInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user.User/GetUserInfo",
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.SerializeToString,
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateUserAvatar(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user.User/UpdateUserAvatar",
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UpdateUserAvatarRequest.SerializeToString,
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )


class UserPublicStub(object):
    """用户公开接口"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserShortInfo = channel.unary_unary(
            "/user.UserPublic/GetUserShortInfo",
            request_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.SerializeToString,
            response_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserShortInfo.FromString,
        )
        self.GetCurrentUserInfo = channel.unary_unary(
            "/user.UserPublic/GetCurrentUserInfo",
            request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            response_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
        )
        self.UpdateUserInfo = channel.unary_unary(
            "/user.UserPublic/UpdateUserInfo",
            request_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UpdateUserInfoRequest.SerializeToString,
            response_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
        )


class UserPublicServicer(object):
    """用户公开接口"""

    def GetUserShortInfo(self, request, context):
        """获取指定ID用户简要信息"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetCurrentUserInfo(self, request, context):
        """获取当前用户信息"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateUserInfo(self, request, context):
        """更新用户信息"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserPublicServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetUserShortInfo": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserShortInfo,
            request_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.FromString,
            response_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserShortInfo.SerializeToString,
        ),
        "GetCurrentUserInfo": grpc.unary_unary_rpc_method_handler(
            servicer.GetCurrentUserInfo,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.SerializeToString,
        ),
        "UpdateUserInfo": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUserInfo,
            request_deserializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UpdateUserInfoRequest.FromString,
            response_serializer=paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("user.UserPublic", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UserPublic(object):
    """用户公开接口"""

    @staticmethod
    def GetUserShortInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user.UserPublic/GetUserShortInfo",
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserId.SerializeToString,
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserShortInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetCurrentUserInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user.UserPublic/GetCurrentUserInfo",
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateUserInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user.UserPublic/UpdateUserInfo",
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UpdateUserInfoRequest.SerializeToString,
            paperpilot__common_dot_protobuf_dot_user_dot_user__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
