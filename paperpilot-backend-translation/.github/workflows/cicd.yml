# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: |
          poetry export --with test --without dev --output requirements.txt --without-urls
          poetry run pip install -r requirements.txt
          poetry run pip install git+https://github.com/Nagico/paperpilot-common.git#subdirectory=paperpilot-common-python
      - name: Style check
        run: |
          poetry run black --check server
          poetry run flake8 server --count --statistics
          poetry run isort --check-only server
#      - name: Pytest
#        run: poetry run pytest --cov-config=tests/.coveragerc --cov server --cov-report xml -n logical
#      - name: Upload coverage
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          file: ./coverage.xml
#          fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    needs:
      - check
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: build and push docker image django
        run: |
          docker login registry.cn-chengdu.aliyuncs.com --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
          docker build -f docker/Dockerfile -t registry.cn-chengdu.aliyuncs.com/ziqiang_studio/paperpilot:translation --build-arg DJANGO_ENV=development .
          docker push registry.cn-chengdu.aliyuncs.com/ziqiang_studio/paperpilot:translation
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: deploy docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ~/docker/paperpilot/translation
            docker login registry.cn-chengdu.aliyuncs.com --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -f
